// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission6_sunny28.Models;

namespace Mission6_sunny28.Migrations
{
    [DbContext(typeof(MovieContex))]
    partial class MovieContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission6_sunny28.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId");

                    b.HasIndex("CategoryId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryId = 1,
                            Director = "Ryan Coogler",
                            Edited = false,
                            Rating = "PG-13",
                            Title = "Black Panther",
                            Year = 2018
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryId = 2,
                            Director = "Joel Schumacher",
                            Edited = false,
                            Rating = "PG-13",
                            Title = "The Phantom of the Opera",
                            Year = 2005
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryId = 3,
                            Director = "Yasuichiro Yamamoto",
                            Edited = false,
                            Rating = "PG-13",
                            Title = "Detective Conan: Full Score of Fear",
                            Year = 2008
                        },
                        new
                        {
                            MovieId = 4,
                            CategoryId = 4,
                            Director = "Makoto Shinkai",
                            Edited = false,
                            Rating = "PG",
                            Title = "Your Name.",
                            Year = 2016
                        });
                });

            modelBuilder.Entity("Mission6_sunny28.Models.MovieCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action/Adventure"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Musical/Romance"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Mystery/Animation"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Romance/Fantasy"
                        });
                });

            modelBuilder.Entity("Mission6_sunny28.Models.Movie", b =>
                {
                    b.HasOne("Mission6_sunny28.Models.MovieCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
